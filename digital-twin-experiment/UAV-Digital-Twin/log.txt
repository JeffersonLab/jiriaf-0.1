[INFO] [launch]: All log files can be found below /root/.ros/log/2024-06-30-19-55-48-398013-9f8e7a2a25a2-47126
[INFO] [launch]: Default logging verbosity is set to INFO
[INFO] [asset.py-1]: process started with pid [47138]
[INFO] [twin.py-2]: process started with pid [47139]
[INFO] [rqt_gui-3]: process started with pid [47140]
[INFO] [logger.py-4]: process started with pid [47141]
[rqt_gui-3] [36mQStandardPaths: XDG_RUNTIME_DIR not set, defaulting to '/tmp/runtime-root'[0m
[rqt_gui-3] No handles with labels found to put in legend.
[twin.py-2] ref_obs_lookup: {'[0.9]': {'1.00775186157644': [1.06]}, '[2.18]': {'1.00775186157644': [2.495]}, '[2.705]': {'1.00775186157644': [2.705]}, '[3.37]': {'1.00775186157644': [3.39]}, '[8.23]': {'1.00775186157644': [7.925]}}
[twin.py-2] Q = [['(0, 0)', '[0.9]', 1.0], ['(20, 20)', '[0.9]', 0.0], ['(40, 40)', '[0.9]', 0.0], ['(60, 60)', '[0.9]', 0.0], ['(80, 80)', '[0.9]', 0.0], ['(0, 0)', '[2.18]', 0.0], ['(20, 20)', '[2.18]', 1.0], ['(40, 40)', '[2.18]', 0.0], ['(60, 60)', '[2.18]', 0.0], ['(80, 80)', '[2.18]', 0.0], ['(0, 0)', '[2.705]', 0.0], ['(20, 20)', '[2.705]', 0.0], ['(40, 40)', '[2.705]', 1.0], ['(60, 60)', '[2.705]', 0.0], ['(80, 80)', '[2.705]', 0.0], ['(0, 0)', '[3.37]', 0.0], ['(20, 20)', '[3.37]', 0.0], ['(40, 40)', '[3.37]', 0.0], ['(60, 60)', '[3.37]', 1.0], ['(80, 80)', '[3.37]', 0.0], ['(0, 0)', '[8.23]', 0.0], ['(20, 20)', '[8.23]', 0.0], ['(40, 40)', '[8.23]', 0.0], ['(60, 60)', '[8.23]', 0.0], ['(80, 80)', '[8.23]', 1.0]]
[rqt_gui-3] No handles with labels found to put in legend.
[rqt_gui-3] No handles with labels found to put in legend.
[rqt_gui-3] No handles with labels found to put in legend.
[rqt_gui-3] No handles with labels found to put in legend.
[twin.py-2] Q = [['(0, 0)', '[0.9]', 1.0], ['(20, 20)', '[0.9]', 0.0], ['(40, 40)', '[0.9]', 0.0], ['(60, 60)', '[0.9]', 0.0], ['(80, 80)', '[0.9]', 0.0], ['(0, 0)', '[2.18]', 0.0], ['(20, 20)', '[2.18]', 1.0], ['(40, 40)', '[2.18]', 0.0], ['(60, 60)', '[2.18]', 0.0], ['(80, 80)', '[2.18]', 0.0], ['(0, 0)', '[2.705]', 0.0], ['(20, 20)', '[2.705]', 0.0], ['(40, 40)', '[2.705]', 1.0], ['(60, 60)', '[2.705]', 0.0], ['(80, 80)', '[2.705]', 0.0], ['(0, 0)', '[3.37]', 0.0], ['(20, 20)', '[3.37]', 0.0], ['(40, 40)', '[3.37]', 0.0], ['(60, 60)', '[3.37]', 1.0], ['(80, 80)', '[3.37]', 0.0], ['(0, 0)', '[8.23]', 0.0], ['(20, 20)', '[8.23]', 0.0], ['(40, 40)', '[8.23]', 0.0], ['(60, 60)', '[8.23]', 0.0], ['(80, 80)', '[8.23]', 1.0]]
[twin.py-2] ================= Processing new state at timestep -1 =================
[twin.py-2] ---> Start printing marginals
[twin.py-2] key: Damage 0, val: [[1.0, 0.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0, 0.0]]
[twin.py-2] key: Ref. Observation 0, val: {'[3.39]': 0.0, '[2.495]': 0.0, '[2.705]': 0.0, '[1.06]': 1.0, '[7.925]': 0.0}
[twin.py-2] key: ControlP 0, val: [[0.0, 1.0]]
[twin.py-2] ---> End printing marginals
[twin.py-2] Processing and publishing control
[twin.py-2] Time 0
[twin.py-2] Marginals: [[0.0, 1.0]]
[twin.py-2] Control: [1]
[twin.py-2] T = [['(0, 0)', '2g', '(0, 0)', 1], ['(0, 0)', '3g', '(0, 0)', 1], ['(0, 0)', '2g', '(20, 20)', 1], ['(0, 0)', '3g', '(20, 20)', 1], ['(0, 0)', '2g', '(40, 40)', 1], ['(0, 0)', '3g', '(40, 40)', 1], ['(0, 0)', '2g', '(60, 60)', 1], ['(0, 0)', '3g', '(60, 60)', 1], ['(0, 0)', '2g', '(80, 80)', 1], ['(0, 0)', '3g', '(80, 80)', 1], ['(20, 20)', '2g', '(0, 0)', 1], ['(20, 20)', '3g', '(0, 0)', 1], ['(20, 20)', '2g', '(20, 20)', 1], ['(20, 20)', '3g', '(20, 20)', 1], ['(20, 20)', '2g', '(40, 40)', 1], ['(20, 20)', '3g', '(40, 40)', 1], ['(20, 20)', '2g', '(60, 60)', 1], ['(20, 20)', '3g', '(60, 60)', 1], ['(20, 20)', '2g', '(80, 80)', 1], ['(20, 20)', '3g', '(80, 80)', 1], ['(40, 40)', '2g', '(0, 0)', 1], ['(40, 40)', '3g', '(0, 0)', 1], ['(40, 40)', '2g', '(20, 20)', 1], ['(40, 40)', '3g', '(20, 20)', 1], ['(40, 40)', '2g', '(40, 40)', 1], ['(40, 40)', '3g', '(40, 40)', 1], ['(40, 40)', '2g', '(60, 60)', 1], ['(40, 40)', '3g', '(60, 60)', 1], ['(40, 40)', '2g', '(80, 80)', 1], ['(40, 40)', '3g', '(80, 80)', 1], ['(60, 60)', '2g', '(0, 0)', 1], ['(60, 60)', '3g', '(0, 0)', 1], ['(60, 60)', '2g', '(20, 20)', 1], ['(60, 60)', '3g', '(20, 20)', 1], ['(60, 60)', '2g', '(40, 40)', 1], ['(60, 60)', '3g', '(40, 40)', 1], ['(60, 60)', '2g', '(60, 60)', 1], ['(60, 60)', '3g', '(60, 60)', 1], ['(60, 60)', '2g', '(80, 80)', 1], ['(60, 60)', '3g', '(80, 80)', 1], ['(80, 80)', '2g', '(0, 0)', 1], ['(80, 80)', '3g', '(0, 0)', 1], ['(80, 80)', '2g', '(20, 20)', 1], ['(80, 80)', '3g', '(20, 20)', 1], ['(80, 80)', '2g', '(40, 40)', 1], ['(80, 80)', '3g', '(40, 40)', 1], ['(80, 80)', '2g', '(60, 60)', 1], ['(80, 80)', '3g', '(60, 60)', 1], ['(80, 80)', '2g', '(80, 80)', 1], ['(80, 80)', '3g', '(80, 80)', 1]]
[twin.py-2] Q = [['(0, 0)', '[0.9]', 1.0], ['(20, 20)', '[0.9]', 0.0], ['(40, 40)', '[0.9]', 0.0], ['(60, 60)', '[0.9]', 0.0], ['(80, 80)', '[0.9]', 0.0], ['(0, 0)', '[2.18]', 0.0], ['(20, 20)', '[2.18]', 1.0], ['(40, 40)', '[2.18]', 0.0], ['(60, 60)', '[2.18]', 0.0], ['(80, 80)', '[2.18]', 0.0], ['(0, 0)', '[2.705]', 0.0], ['(20, 20)', '[2.705]', 0.0], ['(40, 40)', '[2.705]', 1.0], ['(60, 60)', '[2.705]', 0.0], ['(80, 80)', '[2.705]', 0.0], ['(0, 0)', '[3.37]', 0.0], ['(20, 20)', '[3.37]', 0.0], ['(40, 40)', '[3.37]', 0.0], ['(60, 60)', '[3.37]', 1.0], ['(80, 80)', '[3.37]', 0.0], ['(0, 0)', '[8.23]', 0.0], ['(20, 20)', '[8.23]', 0.0], ['(40, 40)', '[8.23]', 0.0], ['(60, 60)', '[8.23]', 0.0], ['(80, 80)', '[8.23]', 1.0]]
[asset.py-1] Ground truth: [0.0, 0.0], control: [1]
[twin.py-2] [0m[INFO] [uav_twin]: Twin published control data for timestep 0 : [1][0m
[asset.py-1] coord: [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1), (3, 0), (3, 1), (4, 0), (4, 1)]
[asset.py-1] data: [[1.8], [3.8], [4.36], [6.36], [5.41], [7.41], [6.74], [8.74], [16.46], [18.46]]
[asset.py-1] Interpolated measurement: [ 3.8] at state [0.0, 0.0] and control [1]
[twin.py-2] Received sensor data
[twin.py-2] O = [['(0, 0)', '[1.2666666666666666]', 0.20011042015612235], ['(20, 20)', '[1.2666666666666666]', 0.20009643191279083], ['(40, 40)', '[1.2666666666666666]', 0.20008260492671556], ['(60, 60)', '[1.2666666666666666]', 0.20005833717888857], ['(80, 80)', '[1.2666666666666666]', 0.19965220582548268]]
[twin.py-2] ================= Processing new state at timestep 0 =================
[twin.py-2] ---> Start printing marginals
[twin.py-2] key: Damage 0, val: [[1.0, 0.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0, 0.0]]
[twin.py-2] key: Ref. Observation 0, val: {'[3.39]': 0.0, '[2.495]': 0.0, '[2.705]': 0.0, '[1.06]': 1.0, '[7.925]': 0.0}
[twin.py-2] key: ControlP 0, val: [[0.0, 1.0]]
[twin.py-2] key: ControlA 0, val: {
[twin.py-2]     "class" :"Distribution",
[twin.py-2]     "dtype" :"str",
[twin.py-2]     "name" :"DiscreteDistribution",
[twin.py-2]     "parameters" :[
[twin.py-2]         {
[twin.py-2]             "2g" :0.0,
[twin.py-2]             "3g" :1.0
[twin.py-2]         }
[twin.py-2]     ],
[twin.py-2]     "frozen" :false
[twin.py-2] }
[twin.py-2] key: Damage 1, val: [[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], [0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001]]
[twin.py-2] key: ControlP 1, val: [[0.79999999999999993, 0.20000000000000015]]
[twin.py-2] key: Ref. Observation 1, val: {'[3.39]': 0.20000000000000001, '[2.495]': 0.20000000000000001, '[2.705]': 0.20000000000000001, '[1.06]': 0.20000000000000001, '[7.925]': 0.20000000000000001}
[twin.py-2] key: Observation 0, val: [1.2666666666666666]
[twin.py-2] ---> End printing marginals
[twin.py-2] R_health: 0.8233333333333334, R_health_var: 0.0
[twin.py-2] R_control: 0.1, R_control_var: 0.0
[twin.py-2] R_health: 0.4141666666666667, R_health_var: 0.15104027777777776
[twin.py-2] R_control: -0.059999999999999984, R_control_var: 0.006400000000000004
[rqt_gui-3] state1: array('d', [1.0, 0.0, 0.0, 0.0, 0.0])
[rqt_gui-3]  means: 0.0
[rqt_gui-3]  stds: 0.0
[asset.py-1] [0m[INFO] [uav_asset]: Asset published sensor data for timestep -1 : [ 1.26666667][0m
[asset.py-1] Generating sensor data for [0.0, 0.0] and [1], strain: [1.2666666666666666]
[asset.py-1] truestate: [0.0, 0.0]
[rqt_gui-3] [1, 0]
[twin.py-2] Processing and publishing control
[twin.py-2] Time 1
[twin.py-2] Marginals: [[0.79999999999999993, 0.20000000000000015]]
[twin.py-2] Control: [0]
[twin.py-2] T = [['(0, 0)', '2g', '(0, 0)', 1], ['(0, 0)', '3g', '(0, 0)', 1], ['(0, 0)', '2g', '(20, 20)', 1], ['(0, 0)', '3g', '(20, 20)', 1], ['(0, 0)', '2g', '(40, 40)', 1], ['(0, 0)', '3g', '(40, 40)', 1], ['(0, 0)', '2g', '(60, 60)', 1], ['(0, 0)', '3g', '(60, 60)', 1], ['(0, 0)', '2g', '(80, 80)', 1], ['(0, 0)', '3g', '(80, 80)', 1], ['(20, 20)', '2g', '(0, 0)', 1], ['(20, 20)', '3g', '(0, 0)', 1], ['(20, 20)', '2g', '(20, 20)', 1], ['(20, 20)', '3g', '(20, 20)', 1], ['(20, 20)', '2g', '(40, 40)', 1], ['(20, 20)', '3g', '(40, 40)', 1], ['(20, 20)', '2g', '(60, 60)', 1], ['(20, 20)', '3g', '(60, 60)', 1], ['(20, 20)', '2g', '(80, 80)', 1], ['(20, 20)', '3g', '(80, 80)', 1], ['(40, 40)', '2g', '(0, 0)', 1], ['(40, 40)', '3g', '(0, 0)', 1], ['(40, 40)', '2g', '(20, 20)', 1], ['(40, 40)', '3g', '(20, 20)', 1], ['(40, 40)', '2g', '(40, 40)', 1], ['(40, 40)', '3g', '(40, 40)', 1], ['(40, 40)', '2g', '(60, 60)', 1], ['(40, 40)', '3g', '(60, 60)', 1], ['(40, 40)', '2g', '(80, 80)', 1], ['(40, 40)', '3g', '(80, 80)', 1], ['(60, 60)', '2g', '(0, 0)', 1], ['(60, 60)', '3g', '(0, 0)', 1], ['(60, 60)', '2g', '(20, 20)', 1], ['(60, 60)', '3g', '(20, 20)', 1], ['(60, 60)', '2g', '(40, 40)', 1], ['(60, 60)', '3g', '(40, 40)', 1], ['(60, 60)', '2g', '(60, 60)', 1], ['(60, 60)', '3g', '(60, 60)', 1], ['(60, 60)', '2g', '(80, 80)', 1], ['(60, 60)', '3g', '(80, 80)', 1], ['(80, 80)', '2g', '(0, 0)', 1], ['(80, 80)', '3g', '(0, 0)', 1], ['(80, 80)', '2g', '(20, 20)', 1], ['(80, 80)', '3g', '(20, 20)', 1], ['(80, 80)', '2g', '(40, 40)', 1], ['(80, 80)', '3g', '(40, 40)', 1], ['(80, 80)', '2g', '(60, 60)', 1], ['(80, 80)', '3g', '(60, 60)', 1], ['(80, 80)', '2g', '(80, 80)', 1], ['(80, 80)', '3g', '(80, 80)', 1]]
[twin.py-2] Q = [['(0, 0)', '[0.9]', 1.0], ['(20, 20)', '[0.9]', 0.0], ['(40, 40)', '[0.9]', 0.0], ['(60, 60)', '[0.9]', 0.0], ['(80, 80)', '[0.9]', 0.0], ['(0, 0)', '[2.18]', 0.0], ['(20, 20)', '[2.18]', 1.0], ['(40, 40)', '[2.18]', 0.0], ['(60, 60)', '[2.18]', 0.0], ['(80, 80)', '[2.18]', 0.0], ['(0, 0)', '[2.705]', 0.0], ['(20, 20)', '[2.705]', 0.0], ['(40, 40)', '[2.705]', 1.0], ['(60, 60)', '[2.705]', 0.0], ['(80, 80)', '[2.705]', 0.0], ['(0, 0)', '[3.37]', 0.0], ['(20, 20)', '[3.37]', 0.0], ['(40, 40)', '[3.37]', 0.0], ['(60, 60)', '[3.37]', 1.0], ['(80, 80)', '[3.37]', 0.0], ['(0, 0)', '[8.23]', 0.0], ['(20, 20)', '[8.23]', 0.0], ['(40, 40)', '[8.23]', 0.0], ['(60, 60)', '[8.23]', 0.0], ['(80, 80)', '[8.23]', 1.0]]
[twin.py-2] [0m[INFO] [uav_twin]: Twin published control data for timestep 1 : [0][0m
[asset.py-1] Ground truth: [0.2, 0.2], control: [0]
[rqt_gui-3] The following exception was never retrieved: list index out of range
[asset.py-1] coord: [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1), (3, 0), (3, 1), (4, 0), (4, 1)]
[asset.py-1] data: [[1.8], [3.8], [4.36], [6.36], [5.41], [7.41], [6.74], [8.74], [16.46], [18.46]]
[asset.py-1] Interpolated measurement: [ 2.312] at state [0.2, 0.2] and control [0]
[asset.py-1] [0m[INFO] [uav_asset]: Asset published sensor data for timestep 0 : [ 1.156][0m
[asset.py-1] Generating sensor data for [0.2, 0.2] and [0], strain: [1.1560000000000001]
[asset.py-1] truestate: [0.2, 0.2]
[twin.py-2] Received sensor data
[twin.py-2] O = [['(0, 0)', '[1.1560000000000001]', 0.2001487141799739], ['(20, 20)', '[1.1560000000000001]', 0.20013612230779687], ['(40, 40)', '[1.1560000000000001]', 0.20011882072753812], ['(60, 60)', '[1.1560000000000001]', 0.2000867736083029], ['(80, 80)', '[1.1560000000000001]', 0.19950956917638807]]
[twin.py-2] ================= Processing new state at timestep 1 =================
[rqt_gui-3] n_estimates: 1, xx: range(0, 2), xxref: range(0, 2)
[rqt_gui-3] idx: 0 
[rqt_gui-3]  i: 0 
[rqt_gui-3]  sensor_data: [array([ 1.26666667]), array([ 1.156])] 
[rqt_gui-3]  ref: [digitaltwin.msg.Sensor(data=array([ 1.06]), vars=array([ 0.]), type=1), digitaltwin.msg.Sensor(data=array([ 3.515]), vars=array([ 5.43745]), type=2)]
[twin.py-2] ---> Start printing marginals
[twin.py-2] key: Damage 0, val: [[1.0, 0.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0, 0.0]]
[twin.py-2] key: Ref. Observation 0, val: {'[3.39]': 0.0, '[2.495]': 0.0, '[2.705]': 0.0, '[1.06]': 1.0, '[7.925]': 0.0}
[twin.py-2] key: ControlP 0, val: [[0.0, 1.0]]
[twin.py-2] key: ControlA 0, val: {
[twin.py-2]     "class" :"Distribution",
[twin.py-2]     "dtype" :"str",
[twin.py-2]     "name" :"DiscreteDistribution",
[twin.py-2]     "parameters" :[
[twin.py-2]         {
[twin.py-2]             "2g" :0.0,
[twin.py-2]             "3g" :1.0
[twin.py-2]         }
[twin.py-2]     ],
[twin.py-2]     "frozen" :false
[twin.py-2] }
[twin.py-2] key: Damage 1, val: [[0.20014871417997387, 0.20013612230779693, 0.20011882072753814, 0.2000867736083029, 0.19950956917638812], [0.20014871417997387, 0.20013612230779693, 0.20011882072753814, 0.2000867736083029, 0.19950956917638812]]
[twin.py-2] key: ControlP 1, val: [[0.79985128582002596, 0.20014871417997401]]
[twin.py-2] key: Ref. Observation 1, val: {'[3.39]': 0.2000867736083029, '[2.495]': 0.20013612230779693, '[2.705]': 0.20011882072753814, '[1.06]': 0.20014871417997387, '[7.925]': 0.19950956917638815}
[twin.py-2] key: Observation 0, val: [1.2666666666666666]
[twin.py-2] key: ControlA 1, val: {
[twin.py-2]     "class" :"Distribution",
[twin.py-2]     "dtype" :"str",
[twin.py-2]     "name" :"DiscreteDistribution",
[twin.py-2]     "parameters" :[
[twin.py-2]         {
[twin.py-2]             "2g" :1.0,
[twin.py-2]             "3g" :0.0
[twin.py-2]         }
[twin.py-2]     ],
[twin.py-2]     "frozen" :false
[twin.py-2] }
[twin.py-2] key: Damage 2, val: [[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], [0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001]]
[twin.py-2] key: ControlP 2, val: [[0.79999999999999993, 0.20000000000000015]]
[twin.py-2] key: Ref. Observation 2, val: {'[3.39]': 0.20000000000000001, '[2.495]': 0.20000000000000001, '[2.705]': 0.20000000000000001, '[1.06]': 0.20000000000000001, '[7.925]': 0.20000000000000001}
[twin.py-2] key: Observation 1, val: [1.1560000000000001]
[twin.py-2] ---> End printing marginals
[twin.py-2] R_health: 0.8233333333333334, R_health_var: 0.0
[twin.py-2] R_control: 0.1, R_control_var: 0.0
[twin.py-2] R_health: 0.4146289715813768, R_health_var: 0.15080615550044
[twin.py-2] R_control: -0.1, R_control_var: 0.0
[twin.py-2] R_health: 0.4141666666666667, R_health_var: 0.15104027777777776
[twin.py-2] R_control: -0.059999999999999984, R_control_var: 0.006400000000000004
[twin.py-2] Processing and publishing control
[twin.py-2] Time 2
[twin.py-2] Marginals: [[0.79999999999999993, 0.20000000000000015]]
[twin.py-2] Control: [0]
[twin.py-2] T = [['(0, 0)', '2g', '(0, 0)', 1], ['(0, 0)', '3g', '(0, 0)', 1], ['(0, 0)', '2g', '(20, 20)', 1], ['(0, 0)', '3g', '(20, 20)', 1], ['(0, 0)', '2g', '(40, 40)', 1], ['(0, 0)', '3g', '(40, 40)', 1], ['(0, 0)', '2g', '(60, 60)', 1], ['(0, 0)', '3g', '(60, 60)', 1], ['(0, 0)', '2g', '(80, 80)', 1], ['(0, 0)', '3g', '(80, 80)', 1], ['(20, 20)', '2g', '(0, 0)', 1], ['(20, 20)', '3g', '(0, 0)', 1], ['(20, 20)', '2g', '(20, 20)', 1], ['(20, 20)', '3g', '(20, 20)', 1], ['(20, 20)', '2g', '(40, 40)', 1], ['(20, 20)', '3g', '(40, 40)', 1], ['(20, 20)', '2g', '(60, 60)', 1], ['(20, 20)', '3g', '(60, 60)', 1], ['(20, 20)', '2g', '(80, 80)', 1], ['(20, 20)', '3g', '(80, 80)', 1], ['(40, 40)', '2g', '(0, 0)', 1], ['(40, 40)', '3g', '(0, 0)', 1], ['(40, 40)', '2g', '(20, 20)', 1], ['(40, 40)', '3g', '(20, 20)', 1], ['(40, 40)', '2g', '(40, 40)', 1], ['(40, 40)', '3g', '(40, 40)', 1], ['(40, 40)', '2g', '(60, 60)', 1], ['(40, 40)', '3g', '(60, 60)', 1], ['(40, 40)', '2g', '(80, 80)', 1], ['(40, 40)', '3g', '(80, 80)', 1], ['(60, 60)', '2g', '(0, 0)', 1], ['(60, 60)', '3g', '(0, 0)', 1], ['(60, 60)', '2g', '(20, 20)', 1], ['(60, 60)', '3g', '(20, 20)', 1], ['(60, 60)', '2g', '(40, 40)', 1], ['(60, 60)', '3g', '(40, 40)', 1], ['(60, 60)', '2g', '(60, 60)', 1], ['(60, 60)', '3g', '(60, 60)', 1], ['(60, 60)', '2g', '(80, 80)', 1], ['(60, 60)', '3g', '(80, 80)', 1], ['(80, 80)', '2g', '(0, 0)', 1], ['(80, 80)', '3g', '(0, 0)', 1], ['(80, 80)', '2g', '(20, 20)', 1], ['(80, 80)', '3g', '(20, 20)', 1], ['(80, 80)', '2g', '(40, 40)', 1], ['(80, 80)', '3g', '(40, 40)', 1], ['(80, 80)', '2g', '(60, 60)', 1], ['(80, 80)', '3g', '(60, 60)', 1], ['(80, 80)', '2g', '(80, 80)', 1], ['(80, 80)', '3g', '(80, 80)', 1]]
[twin.py-2] Q = [['(0, 0)', '[0.9]', 1.0], ['(20, 20)', '[0.9]', 0.0], ['(40, 40)', '[0.9]', 0.0], ['(60, 60)', '[0.9]', 0.0], ['(80, 80)', '[0.9]', 0.0], ['(0, 0)', '[2.18]', 0.0], ['(20, 20)', '[2.18]', 1.0], ['(40, 40)', '[2.18]', 0.0], ['(60, 60)', '[2.18]', 0.0], ['(80, 80)', '[2.18]', 0.0], ['(0, 0)', '[2.705]', 0.0], ['(20, 20)', '[2.705]', 0.0], ['(40, 40)', '[2.705]', 1.0], ['(60, 60)', '[2.705]', 0.0], ['(80, 80)', '[2.705]', 0.0], ['(0, 0)', '[3.37]', 0.0], ['(20, 20)', '[3.37]', 0.0], ['(40, 40)', '[3.37]', 0.0], ['(60, 60)', '[3.37]', 1.0], ['(80, 80)', '[3.37]', 0.0], ['(0, 0)', '[8.23]', 0.0], ['(20, 20)', '[8.23]', 0.0], ['(40, 40)', '[8.23]', 0.0], ['(60, 60)', '[8.23]', 0.0], ['(80, 80)', '[8.23]', 1.0]]
[asset.py-1] Ground truth: [0.4, 0.4], control: [0]
[twin.py-2] [0m[INFO] [uav_twin]: Twin published control data for timestep 2 : [0][0m
[rqt_gui-3] [0, 0]
[rqt_gui-3] state1: array('d', [0.20014871417997387, 0.20013612230779693, 0.20011882072753814, 0.2000867736083029, 0.19950956917638812])
[rqt_gui-3]  means: 1.9986723612933344
[rqt_gui-3]  stds: 1.413808426455654
[rqt_gui-3] state1: array('d', [0.20014871417997387, 0.20013612230779693, 0.20011882072753814, 0.2000867736083029, 0.19950956917638812])
[rqt_gui-3]  means: 1.9986723612933344
[rqt_gui-3]  stds: 1.413808426455654
[asset.py-1] coord: [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1), (3, 0), (3, 1), (4, 0), (4, 1)]
[asset.py-1] data: [[1.8], [3.8], [4.36], [6.36], [5.41], [7.41], [6.74], [8.74], [16.46], [18.46]]
[asset.py-1] Interpolated measurement: [ 2.824] at state [0.4, 0.4] and control [0]
[twin.py-2] Received sensor data
[twin.py-2] O = [['(0, 0)', '[1.4120000000000001]', 0.2001318326522316], ['(20, 20)', '[1.4120000000000001]', 0.20012763562750954], ['(40, 40)', '[1.4120000000000001]', 0.20011377734863905], ['(60, 60)', '[1.4120000000000001]', 0.20008609100953448], ['(80, 80)', '[1.4120000000000001]', 0.1995406633620854]]
[twin.py-2] ================= Processing new state at timestep 2 =================
[asset.py-1] [0m[INFO] [uav_asset]: Asset published sensor data for timestep 1 : [ 1.412][0m
[asset.py-1] Generating sensor data for [0.4, 0.4] and [0], strain: [1.4120000000000001]
[asset.py-1] truestate: [0.4, 0.4]
[rqt_gui-3] n_estimates: 2, xx: range(0, 3), xxref: range(0, 3)
[rqt_gui-3] idx: 0 
[rqt_gui-3]  i: 0 
[rqt_gui-3]  sensor_data: [array([ 1.26666667]), array([ 1.156]), array([ 1.412])] 
[rqt_gui-3]  ref: [digitaltwin.msg.Sensor(data=array([ 1.06]), vars=array([ 0.]), type=1), digitaltwin.msg.Sensor(data=array([ 3.51222617]), vars=array([ 5.4290216]), type=1), digitaltwin.msg.Sensor(data=array([ 3.515]), vars=array([ 5.43745]), type=2)]
[twin.py-2] ---> Start printing marginals
[twin.py-2] key: Damage 0, val: [[1.0, 0.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0, 0.0]]
[twin.py-2] key: Ref. Observation 0, val: {'[3.39]': 0.0, '[2.495]': 0.0, '[2.705]': 0.0, '[1.06]': 1.0, '[7.925]': 0.0}
[twin.py-2] key: ControlP 0, val: [[0.0, 1.0]]
[twin.py-2] key: ControlA 0, val: {
[twin.py-2]     "class" :"Distribution",
[twin.py-2]     "dtype" :"str",
[twin.py-2]     "name" :"DiscreteDistribution",
[twin.py-2]     "parameters" :[
[twin.py-2]         {
[twin.py-2]             "2g" :0.0,
[twin.py-2]             "3g" :1.0
[twin.py-2]         }
[twin.py-2]     ],
[twin.py-2]     "frozen" :false
[twin.py-2] }
[twin.py-2] key: Damage 1, val: [[0.20014871417997387, 0.20013612230779693, 0.20011882072753814, 0.2000867736083029, 0.19950956917638812], [0.20014871417997387, 0.20013612230779693, 0.20011882072753814, 0.2000867736083029, 0.19950956917638812]]
[twin.py-2] key: ControlP 1, val: [[0.79985128582002596, 0.20014871417997401]]
[twin.py-2] key: Ref. Observation 1, val: {'[3.39]': 0.2000867736083029, '[2.495]': 0.20013612230779693, '[2.705]': 0.20011882072753814, '[1.06]': 0.20014871417997387, '[7.925]': 0.19950956917638815}
[twin.py-2] key: Observation 0, val: [1.2666666666666666]
[twin.py-2] key: ControlA 1, val: {
[twin.py-2]     "class" :"Distribution",
[twin.py-2]     "dtype" :"str",
[twin.py-2]     "name" :"DiscreteDistribution",
[twin.py-2]     "parameters" :[
[twin.py-2]         {
[twin.py-2]             "2g" :1.0,
[twin.py-2]             "3g" :0.0
[twin.py-2]         }
[twin.py-2]     ],
[twin.py-2]     "frozen" :false
[twin.py-2] }
[twin.py-2] key: Damage 2, val: [[0.20013183265223156, 0.20012763562750949, 0.20011377734863908, 0.20008609100953453, 0.19954066336208534], [0.20013183265223156, 0.20012763562750949, 0.20011377734863908, 0.20008609100953453, 0.19954066336208534]]
[twin.py-2] key: ControlP 2, val: [[0.79986816734776833, 0.20013183265223169]]
[twin.py-2] key: Ref. Observation 2, val: {'[3.39]': 0.20008609100953453, '[2.495]': 0.20012763562750946, '[2.705]': 0.20011377734863905, '[1.06]': 0.20013183265223153, '[7.925]': 0.19954066336208531}
[twin.py-2] key: Observation 1, val: [1.1560000000000001]
[twin.py-2] key: ControlA 2, val: {
[twin.py-2]     "class" :"Distribution",
[twin.py-2]     "dtype" :"str",
[twin.py-2]     "name" :"DiscreteDistribution",
[twin.py-2]     "parameters" :[
[twin.py-2]         {
[twin.py-2]             "2g" :1.0,
[twin.py-2]             "3g" :0.0
[twin.py-2]         }
[twin.py-2]     ],
[twin.py-2]     "frozen" :false
[twin.py-2] }
[twin.py-2] key: Damage 3, val: [[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], [0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001]]
[twin.py-2] key: ControlP 3, val: [[0.79999999999999993, 0.20000000000000015]]
[twin.py-2] key: Ref. Observation 3, val: {'[3.39]': 0.20000000000000001, '[2.495]': 0.20000000000000001, '[2.705]': 0.20000000000000001, '[1.06]': 0.20000000000000001, '[7.925]': 0.20000000000000001}
[twin.py-2] key: Observation 2, val: [1.4120000000000001]
[twin.py-2] ---> End printing marginals
[twin.py-2] R_health: 0.8233333333333334, R_health_var: 0.0
[twin.py-2] R_control: 0.1, R_control_var: 0.0
[twin.py-2] R_health: 0.4146289715813768, R_health_var: 0.15080615550044
[twin.py-2] R_control: -0.1, R_control_var: 0.0
[twin.py-2] R_health: 0.41459707218384684, R_health_var: 0.15081981809609948
[twin.py-2] R_control: -0.1, R_control_var: 0.0
[twin.py-2] R_health: 0.4141666666666667, R_health_var: 0.15104027777777776
[twin.py-2] R_control: -0.059999999999999984, R_control_var: 0.006400000000000004
[twin.py-2] Processing and publishing control
[twin.py-2] Time 3
[twin.py-2] Marginals: [[0.79999999999999993, 0.20000000000000015]]
[twin.py-2] Control: [0]
[twin.py-2] T = [['(0, 0)', '2g', '(0, 0)', 1], ['(0, 0)', '3g', '(0, 0)', 1], ['(0, 0)', '2g', '(20, 20)', 1], ['(0, 0)', '3g', '(20, 20)', 1], ['(0, 0)', '2g', '(40, 40)', 1], ['(0, 0)', '3g', '(40, 40)', 1], ['(0, 0)', '2g', '(60, 60)', 1], ['(0, 0)', '3g', '(60, 60)', 1], ['(0, 0)', '2g', '(80, 80)', 1], ['(0, 0)', '3g', '(80, 80)', 1], ['(20, 20)', '2g', '(0, 0)', 1], ['(20, 20)', '3g', '(0, 0)', 1], ['(20, 20)', '2g', '(20, 20)', 1], ['(20, 20)', '3g', '(20, 20)', 1], ['(20, 20)', '2g', '(40, 40)', 1], ['(20, 20)', '3g', '(40, 40)', 1], ['(20, 20)', '2g', '(60, 60)', 1], ['(20, 20)', '3g', '(60, 60)', 1], ['(20, 20)', '2g', '(80, 80)', 1], ['(20, 20)', '3g', '(80, 80)', 1], ['(40, 40)', '2g', '(0, 0)', 1], ['(40, 40)', '3g', '(0, 0)', 1], ['(40, 40)', '2g', '(20, 20)', 1], ['(40, 40)', '3g', '(20, 20)', 1], ['(40, 40)', '2g', '(40, 40)', 1], ['(40, 40)', '3g', '(40, 40)', 1], ['(40, 40)', '2g', '(60, 60)', 1], ['(40, 40)', '3g', '(60, 60)', 1], ['(40, 40)', '2g', '(80, 80)', 1], ['(40, 40)', '3g', '(80, 80)', 1], ['(60, 60)', '2g', '(0, 0)', 1], ['(60, 60)', '3g', '(0, 0)', 1], ['(60, 60)', '2g', '(20, 20)', 1], ['(60, 60)', '3g', '(20, 20)', 1], ['(60, 60)', '2g', '(40, 40)', 1], ['(60, 60)', '3g', '(40, 40)', 1], ['(60, 60)', '2g', '(60, 60)', 1], ['(60, 60)', '3g', '(60, 60)', 1], ['(60, 60)', '2g', '(80, 80)', 1], ['(60, 60)', '3g', '(80, 80)', 1], ['(80, 80)', '2g', '(0, 0)', 1], ['(80, 80)', '3g', '(0, 0)', 1], ['(80, 80)', '2g', '(20, 20)', 1], ['(80, 80)', '3g', '(20, 20)', 1], ['(80, 80)', '2g', '(40, 40)', 1], ['(80, 80)', '3g', '(40, 40)', 1], ['(80, 80)', '2g', '(60, 60)', 1], ['(80, 80)', '3g', '(60, 60)', 1], ['(80, 80)', '2g', '(80, 80)', 1], ['(80, 80)', '3g', '(80, 80)', 1]]
[twin.py-2] Q = [['(0, 0)', '[0.9]', 1.0], ['(20, 20)', '[0.9]', 0.0], ['(40, 40)', '[0.9]', 0.0], ['(60, 60)', '[0.9]', 0.0], ['(80, 80)', '[0.9]', 0.0], ['(0, 0)', '[2.18]', 0.0], ['(20, 20)', '[2.18]', 1.0], ['(40, 40)', '[2.18]', 0.0], ['(60, 60)', '[2.18]', 0.0], ['(80, 80)', '[2.18]', 0.0], ['(0, 0)', '[2.705]', 0.0], ['(20, 20)', '[2.705]', 0.0], ['(40, 40)', '[2.705]', 1.0], ['(60, 60)', '[2.705]', 0.0], ['(80, 80)', '[2.705]', 0.0], ['(0, 0)', '[3.37]', 0.0], ['(20, 20)', '[3.37]', 0.0], ['(40, 40)', '[3.37]', 0.0], ['(60, 60)', '[3.37]', 1.0], ['(80, 80)', '[3.37]', 0.0], ['(0, 0)', '[8.23]', 0.0], ['(20, 20)', '[8.23]', 0.0], ['(40, 40)', '[8.23]', 0.0], ['(60, 60)', '[8.23]', 0.0], ['(80, 80)', '[8.23]', 1.0]]
[asset.py-1] Ground truth: [0.6000000000000001, 0.6000000000000001], control: [0]
[twin.py-2] [0m[INFO] [uav_twin]: Twin published control data for timestep 3 : [0][0m
[rqt_gui-3] [0, 0]
[rqt_gui-3] state1: array('d', [0.20013183265223156, 0.2001276356275095, 0.20011377734863908, 0.20008609100953453, 0.19954066336208534])
[rqt_gui-3]  means: 1.9987761168017326
[rqt_gui-3]  stds: 1.413825382713236
[rqt_gui-3] state1: array('d', [0.20013183265223156, 0.2001276356275095, 0.20011377734863908, 0.20008609100953453, 0.19954066336208534])
[rqt_gui-3]  means: 1.9987761168017326
[rqt_gui-3]  stds: 1.413825382713236
[asset.py-1] coord: [(0, 0), (0, 1), (1, 0), (1, 1), (2, 0), (2, 1), (3, 0), (3, 1), (4, 0), (4, 1)]
[asset.py-1] data: [[1.8], [3.8], [4.36], [6.36], [5.41], [7.41], [6.74], [8.74], [16.46], [18.46]]
[asset.py-1] Interpolated measurement: [ 3.336] at state [0.6000000000000001, 0.6000000000000001] and control [0]
[twin.py-2] Received sensor data
[asset.py-1] [0m[INFO] [uav_asset]: Asset published sensor data for timestep 2 : [ 1.668][0m
[asset.py-1] Generating sensor data for [0.6000000000000001, 0.6000000000000001] and [0], strain: [1.6680000000000001]
[asset.py-1] truestate: [0.6000000000000001, 0.6000000000000001]
[twin.py-2] O = [['(0, 0)', '[1.6680000000000001]', 0.2001149511957228], ['(20, 20)', '[1.6680000000000001]', 0.2001191479544303], ['(40, 40)', '[1.6680000000000001]', 0.20010873274424756], ['(60, 60)', '[1.6680000000000001]', 0.20008540706065692], ['(80, 80)', '[1.6680000000000001]', 0.1995717610449424]]
[twin.py-2] ================= Processing new state at timestep 3 =================
[rqt_gui-3] n_estimates: 3, xx: range(0, 4), xxref: range(0, 4)
[rqt_gui-3] idx: 0 
[rqt_gui-3]  i: 0 
[rqt_gui-3]  sensor_data: [array([ 1.26666667]), array([ 1.156]), array([ 1.412]), array([ 1.668])] 
[rqt_gui-3]  ref: [digitaltwin.msg.Sensor(data=array([ 1.06]), vars=array([ 0.]), type=1), digitaltwin.msg.Sensor(data=array([ 3.51222617]), vars=array([ 5.4290216]), type=1), digitaltwin.msg.Sensor(data=array([ 3.51241757]), vars=array([ 5.42951345]), type=1), digitaltwin.msg.Sensor(data=array([ 3.515]), vars=array([ 5.43745]), type=2)]
[twin.py-2] ---> Start printing marginals
[twin.py-2] key: Damage 0, val: [[1.0, 0.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0, 0.0]]
[twin.py-2] key: Ref. Observation 0, val: {'[3.39]': 0.0, '[2.495]': 0.0, '[2.705]': 0.0, '[1.06]': 1.0, '[7.925]': 0.0}
[twin.py-2] key: ControlP 0, val: [[0.0, 1.0]]
[twin.py-2] key: ControlA 0, val: {
[twin.py-2]     "class" :"Distribution",
[twin.py-2]     "dtype" :"str",
[twin.py-2]     "name" :"DiscreteDistribution",
[twin.py-2]     "parameters" :[
[twin.py-2]         {
[twin.py-2]             "2g" :0.0,
[twin.py-2]             "3g" :1.0
[twin.py-2]         }
[twin.py-2]     ],
[twin.py-2]     "frozen" :false
[twin.py-2] }
[twin.py-2] key: Damage 1, val: [[0.20014871417997387, 0.20013612230779693, 0.20011882072753814, 0.2000867736083029, 0.19950956917638812], [0.20014871417997387, 0.20013612230779693, 0.20011882072753814, 0.2000867736083029, 0.19950956917638812]]
[twin.py-2] key: ControlP 1, val: [[0.79985128582002596, 0.20014871417997401]]
[twin.py-2] key: Ref. Observation 1, val: {'[3.39]': 0.2000867736083029, '[2.495]': 0.20013612230779693, '[2.705]': 0.20011882072753814, '[1.06]': 0.20014871417997387, '[7.925]': 0.19950956917638815}
[twin.py-2] key: Observation 0, val: [1.2666666666666666]
[twin.py-2] key: ControlA 1, val: {
[twin.py-2]     "class" :"Distribution",
[twin.py-2]     "dtype" :"str",
[twin.py-2]     "name" :"DiscreteDistribution",
[twin.py-2]     "parameters" :[
[twin.py-2]         {
[twin.py-2]             "2g" :1.0,
[twin.py-2]             "3g" :0.0
[twin.py-2]         }
[twin.py-2]     ],
[twin.py-2]     "frozen" :false
[twin.py-2] }
[twin.py-2] key: Damage 2, val: [[0.20013183265223156, 0.20012763562750949, 0.20011377734863908, 0.20008609100953453, 0.19954066336208537], [0.20013183265223156, 0.20012763562750949, 0.20011377734863908, 0.20008609100953453, 0.19954066336208537]]
[twin.py-2] key: ControlP 2, val: [[0.79986816734776833, 0.20013183265223169]]
[twin.py-2] key: Ref. Observation 2, val: {'[3.39]': 0.20008609100953453, '[2.495]': 0.20012763562750946, '[2.705]': 0.20011377734863905, '[1.06]': 0.20013183265223153, '[7.925]': 0.19954066336208531}
[twin.py-2] key: Observation 1, val: [1.1560000000000001]
[twin.py-2] key: ControlA 2, val: {
[twin.py-2]     "class" :"Distribution",
[twin.py-2]     "dtype" :"str",
[twin.py-2]     "name" :"DiscreteDistribution",
[twin.py-2]     "parameters" :[
[twin.py-2]         {
[twin.py-2]             "2g" :1.0,
[twin.py-2]             "3g" :0.0
[twin.py-2]         }
[twin.py-2]     ],
[twin.py-2]     "frozen" :false
[twin.py-2] }
[twin.py-2] key: Damage 3, val: [[0.20011495119572278, 0.20011914795443034, 0.20010873274424751, 0.20008540706065686, 0.19957176104494243], [0.20011495119572278, 0.20011914795443034, 0.20010873274424751, 0.20008540706065686, 0.19957176104494243]]
[twin.py-2] key: ControlP 3, val: [[0.79988504880427724, 0.20011495119572292]]
[twin.py-2] key: Ref. Observation 3, val: {'[3.39]': 0.20008540706065683, '[2.495]': 0.20011914795443042, '[2.705]': 0.20010873274424751, '[1.06]': 0.20011495119572273, '[7.925]': 0.19957176104494245}
[twin.py-2] key: Observation 2, val: [1.4120000000000001]
[twin.py-2] key: ControlA 3, val: {
[twin.py-2]     "class" :"Distribution",
[twin.py-2]     "dtype" :"str",
[twin.py-2]     "name" :"DiscreteDistribution",
[twin.py-2]     "parameters" :[
[twin.py-2]         {
[twin.py-2]             "2g" :1.0,
[twin.py-2]             "3g" :0.0
[twin.py-2]         }
[twin.py-2]     ],
[twin.py-2]     "frozen" :false
[twin.py-2] }
[twin.py-2] key: Damage 4, val: [[0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001], [0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001, 0.20000000000000001]]
[twin.py-2] key: ControlP 4, val: [[0.79999999999999993, 0.20000000000000015]]
[twin.py-2] key: Ref. Observation 4, val: {'[3.39]': 0.20000000000000001, '[2.495]': 0.20000000000000001, '[2.705]': 0.20000000000000001, '[1.06]': 0.20000000000000001, '[7.925]': 0.20000000000000001}
[twin.py-2] key: Observation 3, val: [1.6680000000000001]
[twin.py-2] ---> End printing marginals
[twin.py-2] R_health: 0.8233333333333334, R_health_var: 0.0
[twin.py-2] R_control: 0.1, R_control_var: 0.0
[twin.py-2] R_health: 0.4146289715813768, R_health_var: 0.15080615550044
[twin.py-2] R_control: -0.1, R_control_var: 0.0
[twin.py-2] R_health: 0.41459707218384684, R_health_var: 0.15081981809609948
[twin.py-2] R_control: -0.1, R_control_var: 0.0
[twin.py-2] R_health: 0.4145651698827074, R_health_var: 0.1508334805084968
[twin.py-2] R_control: -0.1, R_control_var: 0.0
[twin.py-2] R_health: 0.4141666666666667, R_health_var: 0.15104027777777776
[twin.py-2] R_control: -0.059999999999999984, R_control_var: 0.006400000000000004
[twin.py-2] Processing and publishing control
[twin.py-2] Time 4
[twin.py-2] Marginals: [[0.79999999999999993, 0.20000000000000015]]
[twin.py-2] Control: [0]
[twin.py-2] T = [['(0, 0)', '2g', '(0, 0)', 1], ['(0, 0)', '3g', '(0, 0)', 1], ['(0, 0)', '2g', '(20, 20)', 1], ['(0, 0)', '3g', '(20, 20)', 1], ['(0, 0)', '2g', '(40, 40)', 1], ['(0, 0)', '3g', '(40, 40)', 1], ['(0, 0)', '2g', '(60, 60)', 1], ['(0, 0)', '3g', '(60, 60)', 1], ['(0, 0)', '2g', '(80, 80)', 1], ['(0, 0)', '3g', '(80, 80)', 1], ['(20, 20)', '2g', '(0, 0)', 1], ['(20, 20)', '3g', '(0, 0)', 1], ['(20, 20)', '2g', '(20, 20)', 1], ['(20, 20)', '3g', '(20, 20)', 1], ['(20, 20)', '2g', '(40, 40)', 1], ['(20, 20)', '3g', '(40, 40)', 1], ['(20, 20)', '2g', '(60, 60)', 1], ['(20, 20)', '3g', '(60, 60)', 1], ['(20, 20)', '2g', '(80, 80)', 1], ['(20, 20)', '3g', '(80, 80)', 1], ['(40, 40)', '2g', '(0, 0)', 1], ['(40, 40)', '3g', '(0, 0)', 1], ['(40, 40)', '2g', '(20, 20)', 1], ['(40, 40)', '3g', '(20, 20)', 1], ['(40, 40)', '2g', '(40, 40)', 1], ['(40, 40)', '3g', '(40, 40)', 1], ['(40, 40)', '2g', '(60, 60)', 1], ['(40, 40)', '3g', '(60, 60)', 1], ['(40, 40)', '2g', '(80, 80)', 1], ['(40, 40)', '3g', '(80, 80)', 1], ['(60, 60)', '2g', '(0, 0)', 1], ['(60, 60)', '3g', '(0, 0)', 1], ['(60, 60)', '2g', '(20, 20)', 1], ['(60, 60)', '3g', '(20, 20)', 1], ['(60, 60)', '2g', '(40, 40)', 1], ['(60, 60)', '3g', '(40, 40)', 1], ['(60, 60)', '2g', '(60, 60)', 1], ['(60, 60)', '3g', '(60, 60)', 1], ['(60, 60)', '2g', '(80, 80)', 1], ['(60, 60)', '3g', '(80, 80)', 1], ['(80, 80)', '2g', '(0, 0)', 1], ['(80, 80)', '3g', '(0, 0)', 1], ['(80, 80)', '2g', '(20, 20)', 1], ['(80, 80)', '3g', '(20, 20)', 1], ['(80, 80)', '2g', '(40, 40)', 1], ['(80, 80)', '3g', '(40, 40)', 1], ['(80, 80)', '2g', '(60, 60)', 1], ['(80, 80)', '3g', '(60, 60)', 1], ['(80, 80)', '2g', '(80, 80)', 1], ['(80, 80)', '3g', '(80, 80)', 1]]
[twin.py-2] Q = [['(0, 0)', '[0.9]', 1.0], ['(20, 20)', '[0.9]', 0.0], ['(40, 40)', '[0.9]', 0.0], ['(60, 60)', '[0.9]', 0.0], ['(80, 80)', '[0.9]', 0.0], ['(0, 0)', '[2.18]', 0.0], ['(20, 20)', '[2.18]', 1.0], ['(40, 40)', '[2.18]', 0.0], ['(60, 60)', '[2.18]', 0.0], ['(80, 80)', '[2.18]', 0.0], ['(0, 0)', '[2.705]', 0.0], ['(20, 20)', '[2.705]', 0.0], ['(40, 40)', '[2.705]', 1.0], ['(60, 60)', '[2.705]', 0.0], ['(80, 80)', '[2.705]', 0.0], ['(0, 0)', '[3.37]', 0.0], ['(20, 20)', '[3.37]', 0.0], ['(40, 40)', '[3.37]', 0.0], ['(60, 60)', '[3.37]', 1.0], ['(80, 80)', '[3.37]', 0.0], ['(0, 0)', '[8.23]', 0.0], ['(20, 20)', '[8.23]', 0.0], ['(40, 40)', '[8.23]', 0.0], ['(60, 60)', '[8.23]', 0.0], ['(80, 80)', '[8.23]', 1.0]]
[twin.py-2] [0m[INFO] [uav_twin]: Twin published control data for timestep 4 : [0][0m
[asset.py-1] Ground truth: [0.8, 0.8], control: [0]
[rqt_gui-3] [0, 0]
[rqt_gui-3] state1: array('d', [0.20011495119572278, 0.20011914795443034, 0.2001087327442475, 0.20008540706065686, 0.19957176104494243])
[rqt_gui-3]  means: 1.9988798788046656
[rqt_gui-3]  stds: 1.4138423353776959
[rqt_gui-3] state1: array('d', [0.20011495119572278, 0.20011914795443034, 0.2001087327442475, 0.20008540706065686, 0.19957176104494243])
[rqt_gui-3]  means: 1.9988798788046656
[rqt_gui-3]  stds: 1.4138423353776959
[WARNING] [launch]: user interrupted with ctrl-c (SIGINT)
[rqt_gui-3] [0m[INFO] [rclcpp]: signal_handler(signal_value=2)[0m
[logger.py-4] [0m[INFO] [uav_logger]: Shutdown detected...Logger saving data.[0m
[INFO] [asset.py-1]: process has finished cleanly [pid 47138]
[INFO] [twin.py-2]: process has finished cleanly [pid 47139]
[INFO] [rqt_gui-3]: process has finished cleanly [pid 47140]
[INFO] [logger.py-4]: process has finished cleanly [pid 47141]
